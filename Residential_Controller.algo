SET elevatorList TO numberOfElevators

SET lobby TO floor1
SET origin TO lobby

SET waitListUp to EMPTY
SET waitListDown to EMPTY



////////////////////////////////////
START OF PSEUDO CODE
///////////////////////////////////

WHEN button PRESSED 
    CALL reqFloorBtn()
        CALL floorLightBtn()
        CALL waitList()
    CALL findElevator()
    CALL sendElevator()
        CALL arrived()


SEQUENCE reqFloorBtn() RETURNING floor, direction to findElevator()
    WHEN reqFloorBtnUp PRESSED
        RETURN floor AND direction to findElevator()
            CALL floorLightBtn()

    WHEN reqFloorBtnDown PRESSED
        RETURN floor AND direction to findElevator()
            CALL floorLightBtn()
END SEQUENCE

SEQUENCE floorLightBtn()
    IF button PRESSED
        SET floorLightBtn TO On
    ELSE 
        DO NOTHING
END SEQUENCE

SEQUENCE findElevator() WITH floor, direction RETURNING selectedElev

    FOR EACH elevator in elevatorList
    OBTAIN currentElevFloor
    OBTAIN direction
    OBTAIN currentElevState

        IF reqFloor EQUAL currentElevFloor AND currentElevState EQUAL idle                                                                              same floor currentState idle - Best scenario
            THEN RETURN elevator AS BEST selectedElev
            
        ELSE IF currentElevState EQUAL idle
        THEN RETURN elevator AS POSSIBLE selectedElev

        ELSE IF reqFloor EQUAL currentElevFloor AND currentElevDirection EQUAL direction                                                                same floor same dir - second best
            THEN RETURN elevator AS selectedElev         
       
       
        ELSE IF reqFloor IS ABOVE currentElevFloor AND reqFloor IS BEFORE currentDestination AND currentElevDirection EQUAL direction                   ABOVE req BEFORE currentDestination same dir
            THEN RETURN elevator AS selectedElev

        ELSE IF reqFloor IS ABOVE currentElevFloor AND reqFloor IS BEFORE currentDestination AND currentElevDirection NOT EQUAL direction
            THEN RETURN elevator AS POSSIBLE selectedElev / pick up on way down

        ELSE IF reqFloor IS BELOW currentElevFloor AND reqFloor IS BEFORE currentDestination AND currentElevDirection EQUAL direction                   ABOVE req BEFORE currentDestination same dir
            THEN RETURN elevator AS selectedElev
                  
        ELSE IF reqFloor IS ABOVE currentElevFloor AND reqFloor IS BEFORE currentDestination AND currentElevDirection EQUAL direction  
        
        
        
        ELSE IF reqFloor IS BELOW currentElevFloor
        THEN RETURN elevator AS selectedElev
        
        ELSE IF reqFloor IS ABOVE currentElevFloor
        THEN RETURN elevator AS selectedElev
        
END SEQUENCE

SEQUENCE waitList()
END SEQUENCE

SEQUENCE openDoor()
END SEQUENCE

SEQUENCE closeDoor()
END SEQUENCE

SEQUENCE arrived()
    SET floorLightBtn TO Off
    SET dirLight TO On
    CALL doors()
END SEQUENCE

SEQUENCE doors()
    SET timer to 30 
    WHILE timer <= 30
    OPEN colDoors
    OPEN elevDoors
END SEQUENCE





CASE 
        
        
    FloorBtn[i]

        DETERMINE furthestCall
            SET furthestCall to ReqFloorBtn[i] - ReqFloorBtn[i]



        
WHILE timeOfDay >= 05:45:00 && timeOfDay <= 09:00:00 {
}
WHILE timeOfDay > 09:00:00 && timeOfDay <= 17:00:00 {
}
WHILE timeOfDay >= 17:00:00 && timeOfDay <= 05:45:00 {

}
