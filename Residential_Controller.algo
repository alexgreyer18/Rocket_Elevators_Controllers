OBJECTS TO CONTROL:
    Column: Elevator shaft containing Elevator cages
    Cage: Elevator up or down
    CallButton: Up & Down buttons on each floors to call for Elevator
    FloorRequestButton: Buttons inside cage to chose destination 
    Doors: Elevator doors, timer open before closing 10s 
    OpenDoorButton: Button inside Elevator to keep door open
    CloseDoorButton: Button inside Elevator to close door 




'START OF PSEUDO CODE'

BUTTON WAS PRESSED 
    SEQUENCE reqElevator USING floor, direction
    IF selectedElevator IS NULL THEN
        CALL reqFloorBtn WITH floor, direction TO findElevator
        CALL findElevator WITH floor, direction RETURNING selectedElevator
    END IF
    CALL sendElevator WITH floor, selectedElevator
    CALL operateElevator WITH selectedElevator
    END SEQUENCE

    SEQUENCE reqFloorBtn RETURNING floor, direction to findElevator
        IF reqFloorBtn was PRESSED THEN
            RETURN floor AND direction to findElevator
            REPEAT
                SET floorLightBtn TO ON
            UNTIL selectedElevator hasArrived
        ELSE
            SET floorLightBtn TO OFF
    END SEQUENCE

    SEQUENCE insideBtn USING floor, selectedElevator
        IF insideBtn was PRESSED THEN
            RETURN floor AND direction to waitList
            SET insideBtn TO ON
        ELSE
        SET insideBtn TO OFF
    END SEQUENCE

    SEQUENCE findElevator WITH floor, direction RETURNING selectedElevator
        IF selectedElevator IS NULL THEN
        INIT BestElevator TO NULL;
        INIT BestElevatorCase TO NULL;
            FOR EACH Elevator in ElevatorList
                OBTAIN currentElevatorFloor
                OBTAIN direction
                OBTAIN currentElevatorState

                    IF reqFloor EQUAL currentElevatorFloor AND idle OR reqFloor EQUAL currentElevatorFloor AND currentElevatorDirection EQUAL direction THEN 
                        SET BestElevator as Elevator
                        SET BestElevatorCase as 1       
                
                RETURN Elevator AS selectedElevator

                SET selectedElevator AS BestElevatorCase
                
    END SEQUENCE

    SEQUENCE operateElevator WITH selectedElevator
    
        GET floor FROM sorted_waitList
        IF sorted_waitList NOT EQUAL NULL THEN

            IF reqFloor EQUAL currentElevatorFloor THEN
                CALL Doors WITH Elevator
                POP reqFloor FROM sorted_waitList
            END IF
            
            IF reqFloor GREATER THAN currentElevatorFloor THEN
                REPEAT
                    CALL goUp WITH Elevator
                UNTIL 
                    currentElevatorFloor EQUAL reqFloor
                CALL Doors WITH Elevator
                POP reqFloor FROM sorted_waitList
            END IF

            IF reqFloor LESSER THAN currentElevatorFloor THEN
                REPEAT
                    CALL goDown WITH Elevator
                UNTIL 
                    currentElevatorFloor EQUAL reqFloor
                CALL Doors WITH Elevator
                POP reqFloor FROM sorted_waitList
            END IF

        ELSE
            SET currentElevatorState to idle

    END SEQUENCE

        INIT waitList AS NULL;
    SEQUENCE waitList RETURNING sorted_waitList
        GET list FROM waitList
        SORT reqFloor WITH elevatorSortingAlgorithm RETURNING sorted_list
        INIT sorted_waitList AS EQUAL sorted_list
    END SEQUENCE

SEQUENCE hasarrived
    SET floorLightBtn TO Off
    SET dirLight TO On
END SEQUENCE

SEQUENCE doors WITH hasArrived USING Elevator
    IF hasArrived IS TRUE THEN
    SET timer to 10
    WHILE timer <= 10
        SET doorsElevator TO OPEN
    OPEN elevDoors
    'obstructed'
    'overweight'
END SEQUENCE

SET floors TO array OF numberOfFloor floor
SEQUENCE goDown
    FOR EACH numberOfFloor IN floors 
    WHILE reqFloor GREATER THAN
END SEQUENCE

SEQUENCE goUp

END SEQUENCE

